--- a/src/com/mojang/minecraft/net/PacketType.java
+++ b/src/com/mojang/minecraft/net/PacketType.java
@@ -1,9 +1,11 @@
 package com.mojang.minecraft.net;
 
-
 public final class PacketType {
 
    public static final PacketType[] packets = new PacketType[256];
+   private static int nextOpcode = 0;
+
+   // Standard Minecraft Classic packets
    public static final PacketType INDENTIFICATION = new PacketType(new Class[]{Byte.TYPE, String.class, String.class, Byte.TYPE});
    public static final PacketType PING = new PacketType(new Class[0]);
    public static final PacketType LEVEL_INITIALIZE = new PacketType(new Class[0]);
@@ -20,21 +22,32 @@
    public static final PacketType CHAT_MESSAGE = new PacketType(new Class[]{Byte.TYPE, String.class});
    public static final PacketType DISCONNECT = new PacketType(new Class[]{String.class});
    public static final PacketType UPDATE_PLAYER_TYPE = new PacketType(new Class[]{Byte.TYPE});
+   
+   // CPE packets
+   public static final PacketType EXT_INFO = new PacketType(0x10, new Class[]{String.class, Short.TYPE});
+   public static final PacketType EXT_ENTRY = new PacketType(0x11, new Class[]{String.class, Integer.TYPE});
+   public static final PacketType ENV_SET_COLOR = new PacketType(0x19, new Class[]{Byte.TYPE, Short.TYPE, Short.TYPE, Short.TYPE});
+   public static final PacketType SET_MAP_ENV_URL = new PacketType(0x28, new Class[]{String.class});
+
    public final int length;
-   private static int nextOpcode = 0;
    public final byte opCode;
    public Class[] params;
 
+   private PacketType(Class... var1) {
+      this(nextOpcode++, var1);
+   }
 
-   private PacketType(Class ... var1) {
-      this.opCode = (byte)(nextOpcode++);
+   private PacketType(int opCode, Class... var1) {
+      this.opCode = (byte)opCode;
+      if (packets[this.opCode] != null) {
+         throw new IllegalStateException("Opcode " + opCode + " is already in use");
+      }
       packets[this.opCode] = this;
-      this.params = new Class[var1.length];
+      this.params = var1;
       int var2 = 0;
 
       for(int var3 = 0; var3 < var1.length; ++var3) {
          Class var4 = var1[var3];
-         this.params[var3] = var4;
          if(var4 == Long.TYPE) {
             var2 += 8;
          } else if(var4 == Integer.TYPE) {
@@ -57,4 +70,18 @@
       this.length = var2;
    }
 
-}
+   @Override
+   public String toString() {
+       return "PacketType(opCode=0x" + String.format("%02X", this.opCode) + ")";
+   }
+
+   public static PacketType getByOpCode(byte opCode) {
+       return packets[opCode & 0xFF];
+   }
+
+   public static final byte CPE_MAGIC_NUMBER = 0x42;
+
+   public static boolean isCPEClient(byte paddingByte) {
+       return paddingByte == CPE_MAGIC_NUMBER;
+   }
+}
\ No newline at end of file
