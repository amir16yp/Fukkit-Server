package com.fukkit;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Properties;

import com.mojang.minecraft.server.MinecraftServer;

public abstract class JavaPlugin {
    private PluginManager pluginManager;
    private File dataFolder;
    private File file;
    private ClassLoader classLoader;
    private boolean isEnabled = false;
    private Logger logger;
    private PluginConfig config;

    public final void init(PluginManager pluginManager, File file, ClassLoader classLoader) {
        this.pluginManager = pluginManager;
        this.file = file;
        this.classLoader = classLoader;

        // Set up folder structure
        File pluginsFolder = new File("plugins");
        this.dataFolder = new File(pluginsFolder, getName());

        this.logger = API.getLogger(getName());

        // Ensure data folder exists
        if (!dataFolder.exists()) {
            dataFolder.mkdirs();
        }

        // Initialize config
        this.config = new PluginConfig(dataFolder, "config.properties", logger);
    }

    public Scheduler getScheduler()
    {
        return this.getServer().getScheduler();
    }

    public abstract void onEnable();

    public abstract void onDisable();

    public abstract String getName();

    // New method for building default config
    protected void buildDefaultConfig(DefaultConfigBuilder builder) {
        // Default implementation does nothing
        // Plugin developers will override this method to define their default config
    }

    public final PluginManager getPluginManager() {
        return pluginManager;
    }

    public final File getDataFolder() {
        return dataFolder;
    }

    public final File getFile() {
        return file;
    }

    public final ClassLoader getClassLoader() {
        return classLoader;
    }

    public final boolean isEnabled() {
        return isEnabled;
    }

    protected final void setEnabled(boolean enabled) {
        if (isEnabled != enabled) {
            isEnabled = enabled;
            if (isEnabled) {
                onEnable();
            } else {
                onDisable();
            }
        }
    }

    public final Logger getLogger() {
        return logger;
    }

    public final MinecraftServer getServer() {
        return pluginManager.getServer();
    }

    public final PluginConfig getConfig() {
        if (!config.isLoaded()) {
            reloadConfig();
        }
        return config;
    }

    public final void saveConfig() {
        config.save();
    }

    public final void reloadConfig() {
        File configFile = new File(dataFolder, "config.properties");
        if (!configFile.exists()) {
            // If config doesn't exist, create it with default values
            DefaultConfigBuilder builder = new DefaultConfigBuilder();
            buildDefaultConfig(builder);
            Properties defaultProperties = builder.build();
            config.setProperties(defaultProperties);
            config.save();
        } else {
            config.load();
        }
    }

    // Inner class for building default config
    protected class DefaultConfigBuilder {
        private Properties properties = new Properties();

        public DefaultConfigBuilder set(String key, String value) {
            properties.setProperty(key, value);
            return this;
        }

        public DefaultConfigBuilder set(String key, int value) {
            properties.setProperty(key, String.valueOf(value));
            return this;
        }

        public DefaultConfigBuilder set(String key, boolean value) {
            properties.setProperty(key, String.valueOf(value));
            return this;
        }

        public DefaultConfigBuilder set(String key, double value) {
            properties.setProperty(key, String.valueOf(value));
            return this;
        }

        Properties build() {
            return properties;
        }
    }
}