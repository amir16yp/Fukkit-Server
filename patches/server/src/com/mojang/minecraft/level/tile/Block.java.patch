--- a/src/com/mojang/minecraft/level/tile/Block.java
+++ b/src/com/mojang/minecraft/level/tile/Block.java
@@ -3,27 +3,11 @@
 import com.mojang.minecraft.Vector3DCreator;
 import com.mojang.minecraft.level.Level;
 import com.mojang.minecraft.level.liquid.LiquidType;
-import com.mojang.minecraft.level.tile.BookshelfBlock;
-import com.mojang.minecraft.level.tile.DirtBlock;
-import com.mojang.minecraft.level.tile.FlowerBlock;
-import com.mojang.minecraft.level.tile.GlassBlock;
-import com.mojang.minecraft.level.tile.GrassBlock;
-import com.mojang.minecraft.level.tile.LeavesBlock;
-import com.mojang.minecraft.level.tile.LiquidBlock;
-import com.mojang.minecraft.level.tile.MetalBlock;
-import com.mojang.minecraft.level.tile.MushroomBlock;
-import com.mojang.minecraft.level.tile.OreBlock;
-import com.mojang.minecraft.level.tile.SandBlock;
-import com.mojang.minecraft.level.tile.SaplingBlock;
-import com.mojang.minecraft.level.tile.SlabBlock;
-import com.mojang.minecraft.level.tile.SpongeBlock;
-import com.mojang.minecraft.level.tile.StillLiquidBlock;
-import com.mojang.minecraft.level.tile.StoneBlock;
-import com.mojang.minecraft.level.tile.TNTBlock;
-import com.mojang.minecraft.level.tile.Tile$SoundType;
-import com.mojang.minecraft.level.tile.WoodBlock;
 import com.mojang.minecraft.model.Vector3D;
 import com.mojang.minecraft.phys.AABB;
+
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Random;
 
 public class Block {
@@ -86,7 +70,7 @@
    public static final Block OBSIDIAN;
    public final int id;
    public Tile$SoundType stepsound;
-   private boolean explodes;
+   public boolean explodes;
    private float x1;
    private float y1;
    private float z1;
@@ -105,6 +89,11 @@
       liquid[var1] = false;
    }
 
+   public static Block fromID(int id)
+   {
+      return blocks[id];
+   }
+
    public boolean isCube() {
       return true;
    }
@@ -179,6 +168,21 @@
       }
    }
 
+   public static Block getRandomBlock()
+   {
+      List<Block> nonNullBlocks = new ArrayList<>();
+      for (Block block : blocks)
+      {
+         if (block != null)
+         {
+            nonNullBlocks.add(block);
+         }
+      }
+      int randomIndex = random.nextInt(nonNullBlocks.size());
+      Block randomBlock = nonNullBlocks.get(randomIndex);
+      return randomBlock;
+   }
+
    public final boolean canExplode() {
       return this.explodes;
    }
